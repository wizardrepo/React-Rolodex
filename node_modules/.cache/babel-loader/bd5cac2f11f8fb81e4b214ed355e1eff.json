{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Projects/React_App_01/monsters-roladex/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { BackGround } from './components/background/background.component';\nvar dbLink = \"https://jsonplaceholder.typicode.com/users\";\n\nclass Board extends Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: Array(9).fill('X')\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.squares.map(squares => React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" \", squares.value, \" \")));\n  }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onFileChange = e => {\n      this.setState({\n        SearchField: e.target.value\n      });\n    };\n\n    this.state = {\n      monsters: [],\n      SearchField: ''\n    };\n    /* you use the method below to bind a function to the this.state of the App\n    by issuing this in the constructor\n    \n    Alternatively, functions can be re-written like so:\n    from traditional: func(e) {} to func = (e) => {} as the latter, react style func\n    carries state forward. */\n    // this.onFileChange = this.onFileChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(dbLink).then(resp => resp.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          monsters = _this$state.monsters,\n          SearchField = _this$state.SearchField;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(SearchField.toLowerCase())); // const monsters = this.state.monsters;\n    // const SearchField = this.state.SearchField;\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Monsters Rolodex\"), React.createElement(SearchBox, {\n      placeholder: \"find monsters\",\n      handleChange: this.onFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/daniel/Projects/React_App_01/monsters-roladex/src/App.js"],"names":["React","Component","CardList","SearchBox","BackGround","dbLink","Board","constructor","state","squares","Array","fill","render","map","value","App","onFileChange","e","setState","SearchField","target","monsters","componentDidMount","fetch","then","resp","json","users","filteredMonsters","filter","monster","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAMA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,4CAAvB;AACA,SAAQC,SAAR,QAAwB,8CAAxB;AACA,SAAQC,UAAR,QAAyB,8CAAzB;AAGA,IAAIC,MAAM,GAAG,4CAAb;;AAGA,MAAMC,KAAN,SAAoBL,SAApB,CACA;AACEM,EAAAA,WAAW,GACX;AACE;AACA,SAAKC,KAAL,GACA;AACIC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,GAAd;AADb,KADA;AAKD;;AAEDC,EAAAA,MAAM,GACN;AACE,WACE;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,KAAKJ,KAAL,CAAWC,OAAX,CAAmBI,GAAnB,CAAuBJ,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMA,OAAO,CAACK,KAAd,MAAlC,CAFA,CADF;AAOD;;AApBH;;AAwBA,MAAMC,GAAN,SAAkBd,SAAlB,CACA;AACEM,EAAAA,WAAW,GACX;AACE;;AADF,SAiBAS,YAjBA,GAiBgBC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAGF,CAAC,CAACG,MAAF,CAASN;AAAxB,OAAd;AACD,KAnBD;;AAEE,SAAKN,KAAL,GACA;AACEa,MAAAA,QAAQ,EAAE,EADZ;AAEEF,MAAAA,WAAW,EAAE;AAFf,KADA;AAKA;;;;;;AAOD;AACA;;AAMDG,EAAAA,iBAAiB,GACjB;AACEC,IAAAA,KAAK,CAAClB,MAAD,CAAL,CACCmB,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKT,QAAL,CAAc;AAACG,MAAAA,QAAQ,EAAEM;AAAX,KAAd,CAFf;AAGD;;AACDf,EAAAA,MAAM,GACN;AAAA,wBACoC,KAAKJ,KADzC;AAAA,UACUa,QADV,eACUA,QADV;AAAA,UACoBF,WADpB,eACoBA,WADpB;AAEE,UAAMS,gBAAgB,GAAGP,QAAQ,CAACQ,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAAW,CAACa,WAAZ,EAApC,CAA3B,CAAzB,CAFF,CAGC;AACA;;AACE,WACD;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA,oBAAC,SAAD;AACA,MAAA,WAAW,EAAG,eADd;AAEA,MAAA,YAAY,EAAE,KAAKhB,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAMA,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEY,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CADC;AAeF;;AAlDH;;AAuDA,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\n\n\n\n\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nimport {BackGround} from './components/background/background.component'\n\n\nvar dbLink = \"https://jsonplaceholder.typicode.com/users\";\n\n\nclass Board extends Component\n{\n  constructor() \n  {\n    super();\n    this.state = \n    {\n        squares: Array(9).fill('X')\n    };\n\n  }\n\n  render()\n  {\n    return (\n      <div className = \"Board\">\n      {\n      this.state.squares.map(squares => <h1> {squares.value} </h1>)\n      }\n      </div>\n    );\n  }\n\n}\n\nclass App extends Component\n{\n  constructor() \n  {\n    super();\n    this.state = \n    {\n      monsters: [],\n      SearchField: ''\n    };\n    /* you use the method below to bind a function to the this.state of the App\n    by issuing this in the constructor\n    \n    Alternatively, functions can be re-written like so:\n    from traditional: func(e) {} to func = (e) => {} as the latter, react style func\n    carries state forward. */\n\n   // this.onFileChange = this.onFileChange.bind(this);\n  }\n\n  onFileChange = (e) => {\n    this.setState({SearchField : e.target.value})\n  }\n  \n  componentDidMount()\n  {\n    fetch(dbLink)\n    .then(resp => resp.json())\n    .then(users => this.setState({monsters: users}));\n  }\n  render()\n  {\n    const { monsters, SearchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(SearchField.toLowerCase()))\n   // const monsters = this.state.monsters;\n   // const SearchField = this.state.SearchField;\n     return (\n    <div className=\"App\">\n    <h1 id=\"title\">Monsters Rolodex</h1>\n    <SearchBox\n    placeholder = \"find monsters\" \n    handleChange={this.onFileChange}\n    />\n    <CardList monsters={filteredMonsters}/>\n    \n  \n    \n\n\n    </div>\n  );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}